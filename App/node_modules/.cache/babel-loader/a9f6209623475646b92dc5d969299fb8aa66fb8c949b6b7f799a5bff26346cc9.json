{"ast":null,"code":"export const detectOvercharge = (currentAmount, historicalAmounts) => {\n  if (historicalAmounts.length === 0) return null;\n  const avgAmount = historicalAmounts.reduce((sum, amt) => sum + amt, 0) / historicalAmounts.length;\n  const threshold = avgAmount * 1.2;\n  if (currentAmount > threshold) {\n    const percentIncrease = ((currentAmount - avgAmount) / avgAmount * 100).toFixed(1);\n    return {\n      isOvercharge: true,\n      percentIncrease,\n      averageAmount: avgAmount.toFixed(2),\n      difference: (currentAmount - avgAmount).toFixed(2)\n    };\n  }\n  return null;\n};\nexport const getFrequencyColor = frequency => {\n  switch (frequency) {\n    case 'weekly':\n      return 'bg-purple-100 text-purple-800';\n    case 'monthly':\n      return 'bg-blue-100 text-blue-800';\n    case 'quarterly':\n      return 'bg-green-100 text-green-800';\n    case 'yearly':\n      return 'bg-orange-100 text-orange-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\nexport const getNextDueStatus = nextDue => {\n  if (!nextDue) return null;\n  const today = new Date();\n  const dueDate = new Date(nextDue);\n  const diffTime = dueDate - today;\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  if (diffDays < 0) {\n    return {\n      status: 'overdue',\n      color: 'text-red-600',\n      text: `${Math.abs(diffDays)} days overdue`\n    };\n  } else if (diffDays === 0) {\n    return {\n      status: 'today',\n      color: 'text-orange-600',\n      text: 'Due today'\n    };\n  } else if (diffDays <= 3) {\n    return {\n      status: 'soon',\n      color: 'text-yellow-600',\n      text: `Due in ${diffDays} days`\n    };\n  } else {\n    return {\n      status: 'upcoming',\n      color: 'text-gray-600',\n      text: `Due in ${diffDays} days`\n    };\n  }\n};\nexport const getPaymentStatusColor = status => {\n  switch (status) {\n    case 'paid':\n      return 'text-green-600 bg-green-50';\n    case 'pending':\n      return 'text-yellow-600 bg-yellow-50';\n    case 'overdue':\n      return 'text-red-600 bg-red-50';\n    default:\n      return 'text-gray-600 bg-gray-50';\n  }\n};","map":{"version":3,"names":["detectOvercharge","currentAmount","historicalAmounts","length","avgAmount","reduce","sum","amt","threshold","percentIncrease","toFixed","isOvercharge","averageAmount","difference","getFrequencyColor","frequency","getNextDueStatus","nextDue","today","Date","dueDate","diffTime","diffDays","Math","ceil","status","color","text","abs","getPaymentStatusColor"],"sources":["C:/Users/jared/Downloads/src/utils/helpers.js"],"sourcesContent":["export const detectOvercharge = (currentAmount, historicalAmounts) => {\n  if (historicalAmounts.length === 0) return null;\n  \n  const avgAmount = historicalAmounts.reduce((sum, amt) => sum + amt, 0) / historicalAmounts.length;\n  const threshold = avgAmount * 1.2;\n  \n  if (currentAmount > threshold) {\n    const percentIncrease = ((currentAmount - avgAmount) / avgAmount * 100).toFixed(1);\n    return {\n      isOvercharge: true,\n      percentIncrease,\n      averageAmount: avgAmount.toFixed(2),\n      difference: (currentAmount - avgAmount).toFixed(2)\n    };\n  }\n  \n  return null;\n};\n\nexport const getFrequencyColor = (frequency) => {\n  switch (frequency) {\n    case 'weekly': return 'bg-purple-100 text-purple-800';\n    case 'monthly': return 'bg-blue-100 text-blue-800';\n    case 'quarterly': return 'bg-green-100 text-green-800';\n    case 'yearly': return 'bg-orange-100 text-orange-800';\n    default: return 'bg-gray-100 text-gray-800';\n  }\n};\n\nexport const getNextDueStatus = (nextDue) => {\n  if (!nextDue) return null;\n  \n  const today = new Date();\n  const dueDate = new Date(nextDue);\n  const diffTime = dueDate - today;\n  const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n  \n  if (diffDays < 0) {\n    return { status: 'overdue', color: 'text-red-600', text: `${Math.abs(diffDays)} days overdue` };\n  } else if (diffDays === 0) {\n    return { status: 'today', color: 'text-orange-600', text: 'Due today' };\n  } else if (diffDays <= 3) {\n    return { status: 'soon', color: 'text-yellow-600', text: `Due in ${diffDays} days` };\n  } else {\n    return { status: 'upcoming', color: 'text-gray-600', text: `Due in ${diffDays} days` };\n  }\n};\n\nexport const getPaymentStatusColor = (status) => {\n  switch (status) {\n    case 'paid':\n      return 'text-green-600 bg-green-50';\n    case 'pending':\n      return 'text-yellow-600 bg-yellow-50';\n    case 'overdue':\n      return 'text-red-600 bg-red-50';\n    default:\n      return 'text-gray-600 bg-gray-50';\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAACC,aAAa,EAAEC,iBAAiB,KAAK;EACpE,IAAIA,iBAAiB,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAE/C,MAAMC,SAAS,GAAGF,iBAAiB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,GAAGC,GAAG,EAAE,CAAC,CAAC,GAAGL,iBAAiB,CAACC,MAAM;EACjG,MAAMK,SAAS,GAAGJ,SAAS,GAAG,GAAG;EAEjC,IAAIH,aAAa,GAAGO,SAAS,EAAE;IAC7B,MAAMC,eAAe,GAAG,CAAC,CAACR,aAAa,GAAGG,SAAS,IAAIA,SAAS,GAAG,GAAG,EAAEM,OAAO,CAAC,CAAC,CAAC;IAClF,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBF,eAAe;MACfG,aAAa,EAAER,SAAS,CAACM,OAAO,CAAC,CAAC,CAAC;MACnCG,UAAU,EAAE,CAACZ,aAAa,GAAGG,SAAS,EAAEM,OAAO,CAAC,CAAC;IACnD,CAAC;EACH;EAEA,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAIC,SAAS,IAAK;EAC9C,QAAQA,SAAS;IACf,KAAK,QAAQ;MAAE,OAAO,+BAA+B;IACrD,KAAK,SAAS;MAAE,OAAO,2BAA2B;IAClD,KAAK,WAAW;MAAE,OAAO,6BAA6B;IACtD,KAAK,QAAQ;MAAE,OAAO,+BAA+B;IACrD;MAAS,OAAO,2BAA2B;EAC7C;AACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,OAAO,IAAK;EAC3C,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;EAEzB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,OAAO,GAAG,IAAID,IAAI,CAACF,OAAO,CAAC;EACjC,MAAMI,QAAQ,GAAGD,OAAO,GAAGF,KAAK;EAChC,MAAMI,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAE5D,IAAIC,QAAQ,GAAG,CAAC,EAAE;IAChB,OAAO;MAAEG,MAAM,EAAE,SAAS;MAAEC,KAAK,EAAE,cAAc;MAAEC,IAAI,EAAE,GAAGJ,IAAI,CAACK,GAAG,CAACN,QAAQ,CAAC;IAAgB,CAAC;EACjG,CAAC,MAAM,IAAIA,QAAQ,KAAK,CAAC,EAAE;IACzB,OAAO;MAAEG,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,IAAI,EAAE;IAAY,CAAC;EACzE,CAAC,MAAM,IAAIL,QAAQ,IAAI,CAAC,EAAE;IACxB,OAAO;MAAEG,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE,iBAAiB;MAAEC,IAAI,EAAE,UAAUL,QAAQ;IAAQ,CAAC;EACtF,CAAC,MAAM;IACL,OAAO;MAAEG,MAAM,EAAE,UAAU;MAAEC,KAAK,EAAE,eAAe;MAAEC,IAAI,EAAE,UAAUL,QAAQ;IAAQ,CAAC;EACxF;AACF,CAAC;AAED,OAAO,MAAMO,qBAAqB,GAAIJ,MAAM,IAAK;EAC/C,QAAQA,MAAM;IACZ,KAAK,MAAM;MACT,OAAO,4BAA4B;IACrC,KAAK,SAAS;MACZ,OAAO,8BAA8B;IACvC,KAAK,SAAS;MACZ,OAAO,wBAAwB;IACjC;MACE,OAAO,0BAA0B;EACrC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}